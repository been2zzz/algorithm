// https://school.programmers.co.kr/learn/courses/30/lessons/84512
function solution(word) {
  const vowels = ['A', 'E', 'I', 'O', 'U'];

  // 각 자리수별로 그 뒤에 올 수 있는 경우의 수를 계산
  const position_values = [781, 156, 31, 6, 1];

  let answer = 0;

  // 입력된 단어의 각 글자를 하나씩 확인
  for (let i = 0; i < word.length; i++) {
    const vowel_index = vowels.indexOf(word[i]);

    // 현재 자리에서의 순서 계산
    const current_value = vowel_index * position_values[i] + 1;

    // 전체 순서에 더하기
    answer += current_value;
  }

  return answer;
}

// 예시를 통한 이해
// "AAAAE"의 경우:
// 1번째 'A': (0 * 781) + 1 = 1
// 2번째 'A': (0 * 156) + 1 = 1
// 3번째 'A': (0 * 31) + 1 = 1
// 4번째 'A': (0 * 6) + 1 = 1
// 5번째 'E': (1 * 1) + 1 = 2
// 총합: 1 + 1 + 1 + 1 + 2 = 6
// A로 시작: 1번째부터 시작
// E로 시작: 782번째부터 시작(781 + 1)
// I로 시작: 1563번째부터 시작(781 * 2 + 1)
// O로 시작: 2344번째부터 시작(781 * 3 + 1)
// U로 시작: 3125번째부터 시작(781 * 4 + 1)
// 781이 나오는 계산 과정:
// 5번째 자리: 1가지
// 4번째 자리: 5가지 = 5
// 3번째 자리: 5 * 5 = 25
// 2번째 자리: 5 * 5 * 5 = 125
// 1번째 자리: 5 * 5 * 5 * 5 = 625

// 총합: 1 + 5 + 25 + 125 + 625 = 781

// 각 자리의 순서를 더하는 이유:

// "AAAAE"의 경우를 단계별로 보면:
// Copy1단계: A(첫 번째 자리)
//   - A는 첫 번째 모음(index 0)
//     - 계산: (0 * 781) + 1 = 1

// 2단계: AA(두 번째 자리)
//   - A는 첫 번째 모음(index 0)
//     - 계산: (0 * 156) + 1 = 1

// 3단계: AAA(세 번째 자리)
//   - A는 첫 번째 모음(index 0)
//     - 계산: (0 * 31) + 1 = 1

// 4단계: AAAA(네 번째 자리)
//   - A는 첫 번째 모음(index 0)
//     - 계산: (0 * 6) + 1 = 1

// 5단계: AAAAE(다섯 번째 자리)
//   - E는 두 번째 모음(index 1)
//     - 계산: (1 * 1) + 1 = 2

// 최종: 1 + 1 + 1 + 1 + 2 = 6번째